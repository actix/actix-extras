name: CI (post-merge)

on:
  push: { branches: [master] }

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test_linux_nightly:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
        version:
          - nightly

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    services:
      redis:
        image: redis:5.0.7
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust (${{ matrix.version }})
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.version }}

      - uses: taiki-e/cache-cargo-install-action@v1
        with: { tool: cargo-hack }

      - name: check minimal
        run: cargo ci-min

      - name: check minimal + examples
        run: cargo ci-check-min-examples

      - name: check default
        run: cargo ci-check

      - name: tests
        timeout-minutes: 40
        run: cargo ci-test

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
          cargo-cache

  build_and_test_other_nightly:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
          - {
              name: Windows,
              os: windows-latest,
              triple: x86_64-pc-windows-msvc,
            }
        version:
          - nightly

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust (${{ matrix.version }})
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.version }}

      - uses: taiki-e/cache-cargo-install-action@v1
        with: { tool: cargo-hack }

      - name: check minimal
        run: cargo ci-min

      - name: check minimal + examples
        run: cargo ci-check-min-examples

      - name: check default
        run: cargo ci-check

      - name: tests
        timeout-minutes: 40
        run: cargo ci-test --exclude=actix-redis --exclude=actix-session --exclude=actix-limitation -- --nocapture

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
          cargo-cache
