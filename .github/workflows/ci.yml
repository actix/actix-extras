name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  build_and_test_linux:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
        version:
          - 1.46.0 # MSRV
          - stable
          - nightly

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    services:
      redis:
        image: redis:5.0.7
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2

      # # install OpenSSL on Windows
      # - name: Set vcpkg root
      #   if: matrix.target.triple == 'x86_64-pc-windows-msvc'
      #   run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      # - name: Install OpenSSL
      #   if: matrix.target.triple == 'x86_64-pc-windows-msvc'
      #   run: vcpkg install openssl:x64-windows

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Install cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack

      - name: check minimal
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: --clean-per-run check --workspace --no-default-features --tests

      - name: check full
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --bins --examples --tests

      - name: tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v --workspace --all-features --no-fail-fast -- --nocapture

      - name: Generate coverage file
        if: >
          matrix.version == 'stable'
          && github.ref == 'refs/heads/master'
        run: |
          cargo install cargo-tarpaulin --vers "^0.13"
          cargo tarpaulin --out Xml --verbose
      - name: Upload to Codecov
        if: >
          matrix.version == 'stable'
          && github.ref == 'refs/heads/master'
        uses: codecov/codecov-action@v1
        with:
          file: cobertura.xml

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache

  build_and_test_other:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
          - { name: Windows, os: windows-latest, triple: x86_64-pc-windows-msvc }
        version:
          - 1.46.0 # MSRV
          - stable
          - nightly

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v2

      # # install OpenSSL on Windows
      # - name: Set vcpkg root
      #   if: matrix.target.triple == 'x86_64-pc-windows-msvc'
      #   run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      # - name: Install OpenSSL
      #   if: matrix.target.triple == 'x86_64-pc-windows-msvc'
      #   run: vcpkg install openssl:x64-windows

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Install cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack

      - name: check minimal
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: --clean-per-run check --workspace --no-default-features --tests

      - name: check full
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --bins --examples --tests

      - name: tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v
            --workspace --all-features --no-fail-fast
            --exclude=actix-redis
            -- --nocapture

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
