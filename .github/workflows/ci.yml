name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  build_and_test_linux:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
        version:
          - 1.57 # MSRV
          - stable

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint redis-server

    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Install cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack

      - name: check minimal
        uses: actions-rs/cargo@v1
        with: { command: ci-min }

      - name: check minimal + examples
        uses: actions-rs/cargo@v1
        with: { command: ci-check-min-examples }

      - name: check default
        uses: actions-rs/cargo@v1
        with: { command: ci-check }

      - name: tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with: { command: ci-test }

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
          cargo-cache

  build_and_test_other:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
          - { name: Windows, os: windows-latest, triple: x86_64-pc-windows-msvc }
        version:
          - 1.57 # MSRV
          - stable

    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Install cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack

      - name: check minimal
        uses: actions-rs/cargo@v1
        with: { command: ci-min }

      - name: check minimal + examples
        uses: actions-rs/cargo@v1
        with: { command: ci-check-min-examples }

      - name: check default
        uses: actions-rs/cargo@v1
        with: { command: ci-check }

      - name: tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: ci-test
          args: >-
            --exclude=actix-redis
            --exclude=actix-session
            --exclude=actix-limitation

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
          cargo-cache

  doc_tests:
    name: doc tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with: { command: generate-lockfile }
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.3.0

      - name: doc tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: ci-doctest
          args: -- --nocapture
