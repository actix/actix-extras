name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
    types: [checks_requested]
  push:
    branches: [master]

permissions: { contents: read }

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test_linux:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
        version:
          - { name: msrv, version: 1.75.0 }
          - { name: stable, version: stable }

    name: ${{ matrix.target.name }} / ${{ matrix.version.name }}
    runs-on: ${{ matrix.target.os }}

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint redis-server

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (${{ matrix.version.name }})
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
        with:
          toolchain: ${{ matrix.version.version }}

      - name: Install cargo-hack and cargo-ci-cache-clean
        uses: taiki-e/install-action@v2.26.7
        with:
          tool: cargo-hack,cargo-ci-cache-clean

      # - name: workaround MSRV issues
      #   if: matrix.version.name == 'msrv'
      #   run: |
      #     cargo update -p=time:0.3.20 --precise=0.3.16

      - name: check minimal
        run: cargo ci-min

      - name: check minimal + examples
        run: cargo ci-check-min-examples

      - name: check default
        run: cargo ci-check

      - name: tests
        timeout-minutes: 40
        run: cargo ci-test

      - name: CI cache clean
        run: cargo-ci-cache-clean

  build_and_test_other:
    strategy:
      fail-fast: false
      matrix:
        # prettier-ignore
        target:
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
          - { name: Windows, os: windows-latest, triple: x86_64-pc-windows-msvc }
        version:
          - { name: msrv, version: 1.75.0 }
          - { name: stable, version: stable }

    name: ${{ matrix.target.name }} / ${{ matrix.version.name }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (${{ matrix.version.name }})
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
        with:
          toolchain: ${{ matrix.version.version }}

      - name: Install cargo-hack and cargo-ci-cache-clean
        uses: taiki-e/install-action@v2.26.7
        with:
          tool: cargo-hack,cargo-ci-cache-clean

      # - name: workaround MSRV issues
      #   if: matrix.version.name == 'msrv'
      #   run: |
      #     cargo update -p=time:0.3.20 --precise=0.3.16

      - name: check minimal
        run: cargo ci-min

      - name: check minimal + examples
        run: cargo ci-check-min-examples

      - name: check default
        run: cargo ci-check

      - name: tests
        timeout-minutes: 40
        run: cargo ci-test --exclude=actix-redis --exclude=actix-session --exclude=actix-limitation

      - name: CI cache clean
        run: cargo-ci-cache-clean

  doc_tests:
    name: doc tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (nightly)
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0
        with:
          toolchain: nightly

      - name: doc tests
        timeout-minutes: 40
        run: cargo ci-doctest -- --nocapture
